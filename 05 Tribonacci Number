TLE - Recursion
class Solution {
public:

    int helper(int n ){
        if(n == 0) return 0;
        if(n == 1 || n ==2 ) return 1;

        return helper(n-3) + helper(n-2) + helper(n-1);
    }
    int tribonacci(int n) {
      return helper(n);  
    }
};

DP

class Solution {
public:
    int tribonacci(int n) 
    {
        vector<int>tribonacci={0,1,1};
        if(n<tribonacci.size())
        {
            return tribonacci[n];
        }
        n-=2;
        while(n--)
        {
            int N=tribonacci.size();
            tribonacci.push_back(tribonacci[N-1]+tribonacci[N-2]+tribonacci[N-3]);
        }
        return tribonacci.back();
    }
};
