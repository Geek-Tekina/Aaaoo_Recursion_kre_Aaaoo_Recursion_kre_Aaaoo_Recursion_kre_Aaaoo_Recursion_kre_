TLE - Recursion 
class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost,int i) {
        if(i==0 || i==1) return 0;
        return min(minCostClimbingStairs(cost,i-2)+cost[i-2],minCostClimbingStairs(cost,i-1)+cost[i-1]);
    }
    int minCostClimbingStairs(vector<int>& cost) {
        return minCostClimbingStairs(cost,cost.size());
    }
};
DP 
class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        int dp[n];
        dp[0]=cost[0];
        dp[1]=cost[1];
        for(int i=2;i<n;i++)
            dp[i]=min(dp[i-2],dp[i-1])+cost[i];
    
        return min(dp[n-1],dp[n-2]);
    }
};
